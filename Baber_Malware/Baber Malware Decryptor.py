import base64
import pefile
#58BC
def Get_data_and_Key(FilePath):
    pe = pefile.PE(FilePath)
    for section in pe.sections:
        if b'.rdata' in section.Name: 
            return section.get_data()[0x2964:0x2964 + 0x4B4] ,section.get_data()[0x3ABC  : 0x3ABC + 0x7C4],section.get_data()[0x58BC  : 0x58BC + 0x408]

filepath = r"<Malware_Path>"
data1,data2,data3 = Get_data_and_Key(filepath)
splitted_data = data1.split(b"\x00\x00\x00\x00")
data2=data2.split(b"\x00\x00\x00\x00")
data3=data3.split(b"\x00\x00\x00\x00")

#print(data2)
splitted_data.extend(data2)
splitted_data.extend(data3)
print(len(splitted_data))

result_list = []
key = b"1234niwef\x00"

for str_data in splitted_data:
    # Add padding if necessary for base64 decoding
    missing_padding = len(str_data) % 4
    if missing_padding:
        str_data += b'=' * (4 - missing_padding)
    
    try:
        basic_operation = base64.b64decode(str_data)
        decrypted = ""
        for i in range(len(basic_operation)):
            x = chr(basic_operation[i] ^ key[i % len(key)])
            decrypted += x
        result_list.append(decrypted)
    except Exception as e:
        #print(f"Error decoding: {e}")
        result_list.append(None)

print(result_list)

#for str in splitted_data:
#    temp=base64.b64decode(str)
#    
#    for i in range(0,x):
#       decrypted.join(chr(temp[i] ^ key[i%len(key)]))
#
#print(decrypted)
